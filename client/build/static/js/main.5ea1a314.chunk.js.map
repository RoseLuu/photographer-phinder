{"version":3,"sources":["utils/auth.js","components/Navbar.js","utils/queries.js","components/Photographers.js","components/home.js","utils/mutations.js","components/Login.js","components/Footer.js","components/Signup.js","components/Profile.js","lib/commerce.js","components/Products/Product/styles.js","components/Products/Product/Product.js","components/Products/style.js","components/Search/searchbycategories/searchByCate.js","components/Search/index.js","components/Products/Products.js","components/Cart/style.js","components/Cart/CartItem/style.js","components/Cart/CartItem/CartItem.js","components/Cart/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","secondaryDark","indigo","teal","Navbar","totalItems","useState","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","menuId","mobileMenuId","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClick","Auth","loggedIn","MenuItem","IconButton","size","color","Link","logout","Badge","badgeContent","href","Box","sx","flexGrow","AppBar","position","style","background","Toolbar","Typography","variant","noWrap","underline","display","xs","md","edge","event","currentTarget","QUERY_USER","gql","QUERY_ME","QUERY_ALL_USERS","primaryLight","primaryDark","secondaryLight","Photographers","users","length","Grid","container","rowSpacing","columnSpacing","sm","item","justifyContent","p","m","bgcolor","borderStyle","borderColor","borderWidth","borderRadius","map","user","Card","maxWidth","margin","CardActionArea","CardMedia","component","height","image","alt","CardContent","gutterBottom","companyName","photoType","to","username","CardActions","_id","Home","useQuery","loading","data","allusers","console","log","Container","flexDirection","flexWrap","className","src","FormControl","minWidth","Button","LOGIN_USER","ADD_USER","LoginUser","email","password","userFormData","setUserFormData","useMutation","login","error","setShowAlert","validated","useEffect","handleChange","target","name","value","handleFormSubmit","a","preventDefault","checkValidity","stopPropagation","variables","alignItems","direction","spacing","elevation","padding","width","align","Avatar","onSubmit","placeholder","type","onChange","cursor","message","Footer","px","py","textAlign","SignUp","bio","link","reservationCost","showPassword","values","setValues","addUser","e","noValidate","autoComplete","Profile","useParams","me","getProfile","paddingTop","paragraph","Stack","pt","border","paddingLeft","commerce","Commerce","process","makeStyles","root","media","cardActions","cardContent","Product","photo","onAddToCart","classes","categoryName","useStyles","str","split","join","toLowerCase","url","title","price","formatted_with_symbol","dangerouslySetInnerHTML","__html","description","text","disableSpacing","theme","toolbar","mixins","content","backgroundColor","palette","default","SelectCategories","selectedCategory","categories","Select","category","FilterPhotographer","searchResult","setSearchResult","defaultCategory","setSelectedCategory","keyword","setKeyword","resultMess","setResultMess","categoryId","category_id","products","list","query","opacity","find","cat","InputBase","inputProps","Products","box","styles","paddingBottom","slice","reverse","index","productsData","backgroundImage","lg","marginTop","emptyButton","breakpoints","down","marginBottom","up","marginRight","checkoutButton","textDecoration","cardDetails","cartActions","buttons","CartItem","i","onUpdateCartQty","onRemoveFromCart","line_total","quantity","Cart","cart","onEmptyCart","EmptyCard","FilledCart","line_items","subtotal","pathname","hosted_checkout_url","total_items","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","concat","cache","InMemoryCache","App","setCart","setCategories","fetchCategories","categoriesData","productsPerCat","reduce","acc","filter","product","fetchCart","retrieve","handleAddToCart","product_id","add","handleUpdateCartQty","productId","update","handleRemoveFromCart","remove","handleEmptyCart","empty","ApolloProvider","exact","path","Signup","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ea1a314.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n    getProfile() {\n        return decode(this.getToken());\n    }\n\n    loggedIn() {\n        const token = this.getToken();\n        return token && !this.isTokenExpired(token) ? true : false;\n    }\n\n    isTokenExpired(token) {\n        const decoded = decode(token);\n        if (decoded.exp < Date.now() / 1000) {\n            localStorage.removeItem('id_token');\n            return true;\n        }\n        return false;\n    }\n\n    getToken() {\n        return localStorage.getItem('id_token');\n    }\n\n    login(idToken) {\n        localStorage.setItem('id_token', idToken);\n        window.location.assign('/');\n    }\n\n    logout() {\n        localStorage.removeItem('id_token');\n        window.location.reload();\n    }\n}\n\nexport default new AuthService();\n","import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { styled, alpha } from \"@mui/material/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\n// import InputBase from \"@mui/material/InputBase\";\nimport Badge from \"@mui/material/Badge\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport Link from \"@mui/material/Link\";\nimport { teal, indigo } from \"@mui/material/colors\";\nimport Auth from \"../utils/auth\";\n\nconst primary = indigo[500];\nconst primaryLight = indigo[200];\nconst primaryDark = indigo[900];\nconst secondary = teal[500];\nconst secondaryLight = teal[200];\nconst secondaryDark = teal[700];\n\nconst Navbar = ({ totalItems }) => {\n  // set modal display state\n\n  // const [anchorEl, setAnchorEl] = useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\n\n  // const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\",\n      }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\",\n      }}\n      open={isMobileMenuOpen}\n      onClick={handleMobileMenuClose}\n    >\n      {Auth.loggedIn() ? (\n        <div>\n          <MenuItem>\n            <IconButton size=\"large\" aria-label=\"\" color=\"inherit\">\n              <AccountCircle />\n            </IconButton>\n          </MenuItem>\n          <MenuItem>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"primary-search-account-menu\"\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n            >\n              <Link onClick={Auth.logout} color=\"inherit\">\n                <LogoutIcon />\n              </Link>\n            </IconButton>\n          </MenuItem>\n        </div>\n      ) : (\n        <div>\n          {\" \"}\n          <MenuItem>\n            <IconButton size=\"large\" aria-label=\"\" color=\"inherit\">\n              <Badge badgeContent={totalItems} color=\"error\">\n                <ShoppingCartIcon />\n              </Badge>\n            </IconButton>\n          </MenuItem>\n          <MenuItem>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"primary-search-account-menu\"\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n            >\n              <Link href=\"/login\" color=\"inherit\">\n                <LoginIcon />\n              </Link>\n            </IconButton>\n          </MenuItem>\n        </div>\n      )}\n    </Menu>\n  );\n\n  return (\n    <>\n      <Box\n        sx={{\n          flexGrow: 1,\n        }}\n      >\n        <AppBar position=\"static\" style={{ background: secondaryDark }}>\n          <Toolbar>\n            <Typography>\n              <Link\n                variant=\"h6\"\n                noWrap\n                //   component=\"div\"\n                color=\"inherit\"\n                underline=\"hover\"\n                href=\"/\"\n              >\n                {\"Photographer Phinder\"}\n              </Link>\n            </Typography>\n            {Auth.loggedIn() ? (\n              <div>\n                <Box sx={{ flexGrow: 1 }} />\n                <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n                  <IconButton size=\"large\" aria-label=\"\" color=\"inherit\">\n                    <Link href=\"/profile\" color=\"inherit\">\n                      <AccountCircle />\n                    </Link>\n                  </IconButton>\n                  &nbsp;\n                  <IconButton\n                    size=\"large\"\n                    edge=\"end\"\n                    aria-label=\"account of current user\"\n                    aria-controls={menuId}\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                  >\n                    <Link onClick={Auth.logout} color=\"inherit\">\n                      <LogoutIcon />\n                    </Link>\n                  </IconButton>\n                </Box>\n              </div>\n            ) : (\n              <div>\n                <Box sx={{ flexGrow: 1 }} />\n                <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n                  <IconButton size=\"large\" aria-label=\"\" color=\"inherit\">\n                    <Badge badgeContent={totalItems} color=\"error\">\n                      <Link href=\"/cart\" color=\"inherit\">\n                        <ShoppingCartIcon />\n                      </Link>\n                    </Badge>\n                  </IconButton>\n                  &nbsp;\n                  <IconButton\n                    size=\"large\"\n                    edge=\"end\"\n                    aria-label=\"account of current user\"\n                    aria-controls={menuId}\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                  >\n                    <Link href=\"/login\" color=\"inherit\">\n                      <LoginIcon />\n                    </Link>\n                  </IconButton>\n                </Box>\n              </div>\n            )}\n            <Box sx={{ display: { xs: \"flex\", md: \"none\" } }}>\n              <IconButton\n                size=\"large\"\n                aria-label=\"show more\"\n                aria-controls={mobileMenuId}\n                aria-haspopup=\"true\"\n                onClick={handleMobileMenuOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n            </Box>\n          </Toolbar>\n        </AppBar>\n        {renderMobileMenu}\n      </Box>\n    </>\n  );\n};\nexport default Navbar;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      companyName\n      bio\n      photoType\n      location\n      link\n      reservationCost\n      image\n\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      email\n      companyName\n      bio\n      photoType\n      location\n      link\n      reservationCost\n      image\n   \n    }\n  }\n`;\n\nexport const QUERY_USER_LOCATION = gql`\n  query user($location: String!) {\n    user(location: $location) {\n      _id\n      username\n      email\n      companyName\n      bio\n      photoType\n      location\n      link\n      reservationCost\n      image\n  \n    }\n  }\n`;\n\nexport const QUERY_ALL_USERS = gql`\n  query user {\n    allusers {\n      _id\n      username\n      email\n      companyName\n      bio\n      photoType\n      location\n      link\n      reservationCost\n      image\n\n    }\n  }\n`;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n\nimport { teal, indigo } from '@mui/material/colors';\n// import { findByState } from '../utils/API'\n// import SearchResults from './SearchResults';\n// import Profile from \"./Profile\"\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { Typography } from '@mui/material';\nimport { CardActionArea, CardActions } from '@mui/material';\nimport Button from '@mui/material/Button';\n// import Paper from '@mui/material/Paper'\n\n\n\nconst primary = indigo[500];\nconst primaryLight = indigo[200];\nconst primaryDark = indigo[900];\nconst secondary = teal[500];\nconst secondaryLight = teal[200];\n\nconst Photographers = ({ users }) => {\n    if (!users.length) {\n        return <h3>No photgraphers Yet</h3>;\n    }\n    return (\n        <Grid container rowSpacing={1} columnSpacing={{ xs: 2, sm: 4, md: 6 }}>\n            <Grid item xs={12}>\n                <Box sx={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    p: 1,\n                    m: 1,\n                    bgcolor: primaryLight,\n                    borderStyle: \"solid\",\n                    borderColor: primaryDark,\n                    borderWidth: \"5px\",\n                    borderRadius: \"10px\"\n                }}>\n                    {users &&\n                        users.map((user) => (\n                            <Card sx={{\n                                maxWidth: 345,\n                                bgcolor: secondaryLight,\n                                borderColor: primaryDark,\n                                borderWidth: \"5px\",\n                                borderRadius: \"10px\",\n                                margin: \"5px\"\n                            }} key={user._id}>\n                                <CardActionArea>\n                                    <CardMedia\n                                        component=\"img\"\n                                        height=\"140\"\n                                        image={user.image}\n                                        alt=\"\"\n                                    />\n                                    <CardContent sx={{\n                                        bgcolor: secondaryLight\n                                    }}>\n                                        <Typography gutterBottom variant=\"h6\" component=\"div\">\n                                            Name : {user.companyName}\n                                        </Typography>\n                                        <Typography gutterBottom variant=\"h6\" component=\"div\">\n                                            Specialty: {user.photoType}\n                                        </Typography>\n                                        <Typography gutterBottom variant=\"h6\" component=\"div\">\n                                            Location : {user.location}\n                                        </Typography>\n                                        <Link\n                                            to={`/profiles/${user.username}`}\n                                        >\n                                            {/* <Button></Button> */}\n                                            View more of this photographers information!\n                                        </Link>\n                                    </CardContent>\n                                </CardActionArea>\n                                <CardActions>\n                                </CardActions>\n                            </Card>\n                        ))\n                    }\n                </Box>\n            </Grid>\n        </Grid>)\n};\n\nexport default Photographers;","import React from \"react\";\n// import InputLabel from \"@mui/material/InputLabel\";\n// import MenuItem from \"@mui/material/MenuItem\";\n// import FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\n// import Select from \"@mui/material/Select\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport Button from \"@mui/material/Button\";\nimport Link from \"@mui/material/Link\";\nimport { teal, indigo } from \"@mui/material/colors\";\n// import Profile from \"./Profile\";\n// import Card from \"@mui/material/Card\";\n// import CardContent from \"@mui/material/CardContent\";\n// import CardMedia from \"@mui/material/CardMedia\";\n// import { Typography } from \"@mui/material\";\n// import { CardActionArea, CardActions } from \"@mui/material\";\nimport { QUERY_ALL_USERS } from \"../utils/queries\";\nimport Photographers from \"./Photographers\";\nimport { useQuery } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\n\nconst primary = indigo[500];\nconst primaryLight = indigo[200];\nconst primaryDark = indigo[900];\nconst secondary = teal[500];\nconst secondaryLight = teal[200];\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_ALL_USERS);\n  const users = data?.allusers || [];\n  console.log(users);\n  return (\n    <Container\n      maxWidth=\"xxl\"\n      sx={{\n        bgcolor: secondaryLight,\n      }}\n    >\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 2, sm: 4, md: 6 }}>\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              flexDirection: \"row\",\n              flexWrap: \"nowrap\",\n            }}\n          >\n            <img\n              className=\"homeImage\"\n              src=\"/image/pexels-andre-furtado-1264210.jpg\"\n              alt=\"Woman with Camera\"\n            ></img>\n            <img\n              className=\"homeImage\"\n              src=\"/image/pexels-hamann-la-947785.jpg\"\n              alt=\"Woman with Camera\"\n            ></img>\n            <img\n              className=\"homeImage\"\n              src=\"/image/pexels-element-digital-1051076.jpg\"\n              alt=\"Woman with Camera\"\n            ></img>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              p: 1,\n              m: 1,\n              bgcolor: primaryLight,\n              borderStyle: \"solid\",\n              borderColor: primaryDark,\n              borderWidth: \"5px\",\n              borderRadius: \"10px\",\n            }}\n          >\n            <div className=\"homepagetext\">\n              <h1>\n                {\" \"}\n                Let us help you capture the perfect photographer to capture your\n                perfect moments...\n              </h1>\n              <p>\n                {\" \"}\n                Whether you are celebrating a milestone in your life be it\n                marriage or an edition to the family, or are looking to update\n                your headshots, or maybe Fido needs a new portrait on the wall,\n                let Photographer Phinder help you find that perfect person who\n                will imortalize your memories!\n              </p>\n\n              <p>\n                {\" \"}\n                Not sure how to start? Photographer Phinder can help narrow the\n                field, just let us know either what state you are looking to\n                find a talented photographer or what type of photography you're\n                looking for. We categorize our photographers by their identified\n                specialty, choose from:\n              </p>\n              <ul>\n                <li>\n                  Wedding - Often our wedding photgraphers are also an excellent\n                  option if you're looking for engagement photos as well!\n                </li>\n                <li>\n                  Maternity/Baby - Looking for someone to caputre Baby before\n                  and after the birth?This is where you want to be!\n                </li>\n                <li>\n                  Family - Whether it's you and your significant other, or you\n                  and the kids, even the entire extended family, we've got you\n                  covered with our Family Photographers\n                </li>\n                <li>\n                  Head Shot - Corporate or Artistic, there are many talented\n                  headshot photgraphers in you area!\n                </li>\n                <li>\n                  Pet - Don't think that this is just limited to your pup and\n                  kitten, you got a horse a pig or even a snake - I'm sure we've\n                  got someone who'd love to snap their portrait.\n                </li>\n                <li>\n                  Other - Something off the beaten path?Maybe your home, car, or\n                  airplane - you might be looking for someone right here!\n                </li>\n              </ul>\n              <p>\n                {\" \"}\n                Odds are you'll find the perfect person amoung our talented\n                professionals!\n              </p>\n            </div>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              p: 1,\n              m: 1,\n              bgcolor: primaryLight,\n              borderStyle: \"solid\",\n              borderColor: primaryDark,\n              borderWidth: \"5px\",\n              borderRadius: \"10px\",\n            }}\n          >\n            {loading ? <div>Loading...</div> : <Photographers users={users} />}\n          </Box>\n        </Grid>\n      </Grid>\n      {Auth.loggedIn() ? null : (\n        <>\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                p: 1,\n                m: 1,\n                bgcolor: primaryLight,\n                borderStyle: \"solid\",\n                borderColor: primaryDark,\n                borderWidth: \"5px\",\n                borderRadius: \"10px\",\n              }}\n            >\n              <FormControl\n                className=\"type\"\n                sx={{\n                  m: 1,\n                  minWidth: 120,\n                }}\n              >\n                <h1> Find some one you like?</h1>\n                <Button\n                  variant=\"contained\"\n                  sx={{\n                    bgcolor: primaryDark,\n                  }}\n                >\n                  <Link href=\"/products\" color=\"inherit\" underline=\"none\">\n                    Book a Reservation\n                  </Link>\n                </Button>\n              </FormControl>\n            </Box>\n          </Grid>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Home;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser( $username: String!, $email: String!, $password: String!, $companyName: String, $bio: String, $photoType:String\n    $location: String!, $link: String, $reservationCost:String ) {\n    addUser( username: $username, email: $email, password: $password, \n        companyName: $companyName, bio: $bio, photoType:$photoType, \n        location: $location, link : $link,  reservationCost: $reservationCost) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport {\n  Grid,\n  Avatar,\n  Typography,\n  // Link,\n} from \"@material-ui/core\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n// import { useFormControl } from \"@mui/material/FormControl\";\n// import Checkbox from \"@material-ui/core/Checkbox\";\n// import { Input } from \"@mui/material\";\n// import { InputLabel } from \"@mui/material\";\n// import { FormHelperText } from \"@mui/material\";\n// import { FormControl } from \"@mui/material\";\nimport Container from \"@mui/material/Container\";\n// import { loginUser } from '../utils/API';\n\nimport { teal, indigo } from \"@mui/material/colors\";\nconst secondaryLight = teal[200];\nconst primary = indigo[500];\n\nconst LoginUser = () => {\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN_USER);\n  const [showAlert, setShowAlert] = useState(false);\n  const [validated] = useState(false);\n\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n  //   const [showAlert, setShowAlert] = useState(f\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(userFormData);\n\n    //  check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    console.log(userFormData);\n\n    try {\n      const { data } = await login({\n        variables: { ...userFormData },\n      });\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n  const paperStyle = {\n    padding: 20,\n    height: \"80vh\",\n    width: 300,\n    margin: \"30px auto\",\n  };\n  return (\n    <Container\n      maxWidth=\"xxl\"\n      sx={{\n        bgcolor: secondaryLight,\n      }}\n    >\n      <div>\n        <Grid\n          container\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          direction=\"row\"\n        >\n          <Grid item>\n            <Grid\n              container\n              direction=\"column\"\n              justifyContent=\"center\"\n              spacing={2}\n              className=\"login-form\"\n              color=\"inherit\"\n            >\n              <Container\n                variant=\"elevation\"\n                elevation={2}\n                className=\"login-background\"\n                style={paperStyle}\n              >\n                <Grid item align=\"center\">\n                  <Avatar>\n                    <LockOutlinedIcon />\n                  </Avatar>\n                  <Typography component=\"h1\" variant=\"h5\">\n                    Log in\n                  </Typography>\n                </Grid>\n                &nbsp;\n                <Grid item>\n                  {/* {data ? (\n                                        <p>\n                                            Success! You may now head{' '}\n                                            <Link to=\"/\">back to the homepage.</Link>\n                                        </p>\n                                    ) : ( */}\n                  <form validated={validated} onSubmit={handleFormSubmit}>\n                    {/* <Alert\n                                            dismissible\n                                            onClose={() => setShowAlert(false)}\n                                            show={showAlert}\n                                            variant=\"danger\"\n                                        >\n                                            Something went wrong with your login credentials!\n                                        </Alert> */}\n                    {/* <Grid container direction=\"column\" spacing={2}> */}\n                    {/* <Grid item> */}\n                    {/* <TextField sx={{\n                                                        color: primary\n                                                    }}\n                                                        type=\"email\"\n                                                        placeholder=\"Email\"\n                                                        fullWidth\n                                                        name=\"email\"\n                                                        variant=\"outlined\"\n                                                        value={userFormData.email}\n                                                        onChange={handleChange}\n                                                        required\n                                                        autoFocus\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <TextField\n                                                        sx={{\n                                                            color: primary\n                                                        }}\n                                                        type=\"password\"\n                                                        placeholder=\"Password\"\n                                                        fullWidth\n                                                        name=\"password\"\n                                                        variant=\"outlined\"\n                                                        onChange={handleInputChange}\n                                                        required\n                                                    />\n                                                </Grid> */}\n                    {/* <Grid item>\n                                                    <Button\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        type=\"submit\"\n                                                        className=\"button-block\"\n                                                    >\n                                                        Submit\n                                                    </Button>\n                                                </Grid>// */}\n                    {/* </Grid> */}\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"Your email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={userFormData.email}\n                      onChange={handleChange}\n                    />\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"******\"\n                      name=\"password\"\n                      type=\"password\"\n                      value={userFormData.password}\n                      onChange={handleChange}\n                    />\n                    <button\n                      className=\"btn btn-block btn-primary\"\n                      style={{ cursor: \"pointer\" }}\n                      type=\"submit\"\n                    >\n                      Submit\n                    </button>\n                  </form>\n                  {/* )} */}\n                </Grid>\n                &nbsp;\n                <Grid item>\n                  <Typography>\n                    {\" \"}\n                    Don't have an account?\n                    <Link to=\"/signup\"> Sign Up </Link>\n                  </Typography>\n                </Grid>\n              </Container>\n            </Grid>\n          </Grid>\n        </Grid>\n        {error && (\n          <div className=\"my-3 p-3 bg-danger text-white\">{error.message}</div>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default LoginUser;\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Link from \"@mui/material/Link\";\n// import { Grid } from \"@mui/material\";\nimport { teal, indigo } from \"@mui/material/colors\";\n\nconst primary = indigo[500];\nconst primaryLight = indigo[200];\nconst primaryDark = indigo[900];\nconst secondary = teal[500];\nconst secondaryLight = teal[200];\nconst secondaryDark = teal[700];\n\nexport default function Footer() {\n  return (\n    <Box\n      px={{ xs: 3, sm: 5 }}\n      py={{ xs: 5, sm: 5 }}\n      sx={{ bgcolor: secondaryDark, color: \"white\" }}\n      // color=\"white\"\n    >\n      <Container\n        maxWidth=\"lg\"\n        sx={{\n          bgcolor: secondaryDark,\n        }}\n      >\n        <Typography\n          variant=\"body1\"\n          textAlign=\"center\"\n          sx={{ bgcolor: secondaryDark }}\n        >\n          Copyright ©{\" \"}\n          <Link\n            href=\"https://github.com/cianfich1016/Photographer-Phinder\"\n            color=\"inherit\"\n            underline=\"none\"\n            sx={{\n              bgcolor: secondaryDark,\n            }}\n          >\n            Github\n          </Link>\n        </Typography>\n      </Container>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\n// import TextField from \"@mui/material/TextField\";\n// import MenuItem from \"@mui/material/MenuItem\";\nimport Container from \"@mui/material/Container\";\n// import IconButton from \"@mui/material/IconButton\";\n// import Button from \"@mui/material/Button\";\n// import Input from '@mui/material/Input';\nimport Grid from \"@mui/material/Grid\";\n// import OutlinedInput from \"@mui/material/OutlinedInput\";\n// import InputLabel from \"@mui/material/InputLabel\";\n// import InputAdornment from \"@mui/material/InputAdornment\";\n// import FormHelperText from '@mui/material/FormHelperText';\n// // import Link from \"@mui/material/Link\";\n// import FormControl from \"@mui/material/FormControl\";\n// import Visibility from \"@mui/icons-material/Visibility\";\n// import VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { teal, indigo } from \"@mui/material/colors\";\n\n// import Select from '@mui/material/Select';\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\n// const primary = indigo[500];\nconst primaryLight = indigo[200];\n// const primaryDark = indigo[900];\n// const secondary = teal[500];\nconst secondaryLight = teal[200];\n\nconst SignUp = () => {\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    companyName: \"\",\n    bio: \"\",\n    photoType: \"\",\n    location: \"\",\n    link: \"\",\n    reservationCost: \"\",\n    image: \"\",\n    showPassword: false,\n  });\n\n  const [validated] = useState(false);\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    console.log(values);\n\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  // const handleChange = (event) => {\n  //     const { name, value } = event.target;\n  //     setValues({ ...values, [name]: value });\n  // };\n\n  // const handleClickShowPassword = () => {\n  //     setValues({\n  //         ...values,\n  //         showPassword: !values.showPassword,\n  //     });\n  // };\n\n  // const handleMouseDownPassword = (event) => {\n  //     event.preventDefault();\n  // };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    console.log(values);\n    console.log(data);\n\n    // const form = e.currentTarget;\n    // if (form.checkValidity() === false) {\n    //     e.preventDefault();\n    //     e.stopPropagation();\n    // }\n    // console.log(values);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...values },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <Container\n      maxWidth=\"xxl\"\n      sx={{\n        bgcolor: secondaryLight,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {data ? (\n        <p>\n          Success! You may now head <Link to=\"/\">back to the homepage.</Link>\n        </p>\n      ) : (\n        <Box\n          component=\"form\"\n          maxWidth=\"lg\"\n          onSubmit={handleFormSubmit}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n            display: \"flex\",\n            justifyContent: \"center\",\n            p: 2,\n            m: 2,\n            bgcolor: primaryLight,\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <Grid container direction=\"row\" spacing={2}>\n            <Grid item xs={12}>\n              <h1>Photographer Sign Up!</h1>\n            </Grid>\n            {/* // <form validated={validated} onSubmit={handleFormSubmit}> */}\n\n            {/* <Grid item xs={4} >\n                                <TextField\n                                    required\n                                    id=\"outlined-required\"\n                                    label=\"UserName required\"\n                                    placeholder=\"UserName\"\n                                    name=\"username\"\n                                    type=\"text\"\n                                    value={values.username}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    required\n                                    id=\"outlined-required\"\n                                    label=\"Email required\"\n                                    placeholder=\"Email\"\n                                    value={values.email}\n                                    name=\"email\"\n                                    type=\"email\"\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <FormControl sx={{ m: 1, width: \"25ch\" }} variant=\"outlined\">\n                                    <InputLabel htmlFor=\"outlined-adornment-password\">\n                                        Password\n                                    </InputLabel>\n                                    <OutlinedInput\n\n                                        required\n                                        id=\"outlined-adornment-password\"\n                                        type={values.showPassword ? \"text\" : \"password\"}\n                                        value={values.password}\n                                        name=\"password\"\n                                        onChange={handleChange(\"password\")}\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={handleClickShowPassword}\n                                                    onMouseDown={handleMouseDownPassword}\n                                                    edge=\"end\"\n                                                >\n                                                    {values.showPassword ? <VisibilityOff /> : <Visibility />}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                        label=\"Password\"\n                                    />\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"outlined-basic\"\n                                    label=\"Company Name\"\n                                    variant=\"outlined\"\n                                    type=\"text\"\n                                    value={values.companyName}\n                                    name=\"companyName\"\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <FormControl\n                                    sx={{ m: 1, width: \"25ch\" }}>\n                                    <InputLabel id=\"demo-simple-select-helper-label\"></InputLabel>\n                                    <Select\n                                        id=\"outlined-select-photo\"\n                                        select\n                                        label=\"Select\"\n                                        value={values.photoType}\n                                        name=\"photoType\"\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        helperText=\"Please select your specialty\"\n                                    >\n                                        {photoType.map((photos) => (\n                                            <MenuItem key={photos.value} value={photos.value}>\n                                                {photos.label}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                    <FormHelperText>Location</FormHelperText>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <FormControl\n                                    sx={{ m: 1, width: \"25ch\" }}>\n                                    <InputLabel id=\"demo-simple-select-helper-label\"></InputLabel>\n                                    <Select\n                                        id=\"outlined-select-location\"\n                                        select\n                                        label=\"Select\"\n                                        value={values.location}\n                                        name=\"location\"\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        helperText=\"Please select your state\"\n                                    >\n                                        {locations.map((state) => (\n                                            <MenuItem key={state.value} value={state.value}>\n                                                {state.label}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                    <FormHelperText>Location</FormHelperText>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"outlined-multiline-static\"\n                                    label=\"Please provide a link to your work\"\n                                    multiline\n                                    rows={10}\n                                    placeholder=\"www.yourwork.com\"\n                                    value={values.link}\n                                    name=\"link\"\n                                    type=\"text\"\n                                    onChange={handleChange}\n\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    required\n                                    id=\"outlined-number\"\n                                    label=\"Reservation Cost\"\n                                    type=\"number\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    rows={10}\n                                    multiline\n                                    value={values.reservationCost}\n                                    name=\"reservationCost\"\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    id=\"outlined-multiline-static\"\n                                    label=\"Bio\"\n                                    multiline\n                                    rows={10}\n                                    placeholder=\"Tell us about you...\"\n                                    value={values.bio}\n                                    name=\"bio\"\n                                    type=\"text\"\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}\n                                sx={{\n                                    display: \"flex\",\n                                    justifyContent: \"flex-end\"\n                                }}>\n                                <p id=\"pictureMsg\">\n                                    {\" \"}\n                                    Please email up to 5 images for submission and approval to:{\" \"}\n                                    <a className=\"mailto\" href=\"mailto:photographerphinder@gmail.com\">\n                                        photographerphinder@gmail.com\n                                    </a>{\" \"}\n                                </p>\n                                <Button\n                                    variant=\"contained\"\n                                    // onClick={handleFormSubmit}\n                                    type=\"submit\"\n                                    sx={{\n                                        bgcolor: primaryDark,\n                                        display: \"flex\",\n                                        flexDirection: \"flex-end\",\n                                        p: 2\n                                    }}>\n                                    {/* <Link href=\"/profile\" underline=\"none\" color=\"inherit\">\n                                        Create Your Profile\n                                    </Link> */}\n            {/* </Button>\n                            </Grid> */}\n            <input\n              className=\"form-input\"\n              placeholder=\"Your username\"\n              name=\"username\"\n              type=\"text\"\n              value={values.username}\n              onChange={handleChange}\n            />\n            <input\n              className=\"form-input\"\n              placeholder=\"Your email\"\n              name=\"email\"\n              type=\"email\"\n              value={values.email}\n              onChange={handleChange}\n            />\n            <input\n              className=\"form-input\"\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              value={values.password}\n              onChange={handleChange}\n            />\n            <input\n              className=\"form-input\"\n              placeholder=\"Your Company\"\n              name=\"companyName\"\n              type=\"text\"\n              value={values.companyName}\n              onChange={handleChange}\n            />\n            <input\n              className=\"form-input\"\n              placeholder=\"Your Bio\"\n              name=\"bio\"\n              type=\"text\"\n              value={values.bio}\n              onChange={handleChange}\n            />\n            <input\n              className=\"form-input\"\n              placeholder=\"Your State\"\n              name=\"location\"\n              type=\"text\"\n              value={values.location}\n              onChange={handleChange}\n            />\n            <input\n              className=\"form-input\"\n              placeholder=\"Your Specialty\"\n              name=\"photoType\"\n              type=\"text\"\n              value={values.photoType}\n              onChange={handleChange}\n            />\n            <input\n              className=\"form-input\"\n              placeholder=\"Your URL\"\n              name=\"link\"\n              type=\"text\"\n              value={values.link}\n              onChange={handleChange}\n            />\n            <input\n              className=\"form-input\"\n              placeholder=\"Your Reservation Fee\"\n              name=\"reservationCost\"\n              type=\"text\"\n              value={values.reservationCost}\n              onChange={handleChange}\n            />\n            <p id=\"pictureMsg\">\n              {\" \"}\n              Please email up to 5 images for submission and approval to:{\" \"}\n              <a className=\"mailto\" href=\"mailto:photographerphinder@gmail.com\">\n                photographerphinder@gmail.com\n              </a>{\" \"}\n            </p>\n            <button\n              className=\"btn btn-block btn-info\"\n              style={{ cursor: \"pointer\" }}\n              type=\"submit\"\n            >\n              Submit\n            </button>\n          </Grid>\n        </Box>\n      )}\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import * as React from \"react\";\nimport Container from \"@mui/material/Container\";\nimport Button from \"@mui/material/Button\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n// /import Carousel from \"react-material-ui-carousel\";\n// import CarouselSlide from \"react-material-ui-carousel\";\nimport Link from \"@mui/material/Link\";\nimport { teal, indigo } from \"@mui/material/colors\";\n\n// import React from 'react';\n\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_USER, QUERY_ME } from \"../utils/queries\";\nimport Auth from \"../utils/auth\";\nimport { getDefaultNormalizer } from \"@testing-library/react\";\n\n// var Mailto = require('react-mailto');\n\n// const itemData = [\n//     {\n//         img: \"https://images.unsplash.com/photo-1551963831-b3b1ca40c98e\",\n//         title: \"Breakfast\",\n//         author: \"@bkristastucchio\",\n//     },\n//     {\n//         img: \"https://images.unsplash.com/photo-1551782450-a2132b4ba21d\",\n//         title: \"Burger\",\n//         author: \"@rollelflex_graphy726\",\n//     },\n//     {\n//         img: \"https://images.unsplash.com/photo-1522770179533-24471fcdba45\",\n//         title: \"Camera\",\n//         author: \"@helloimnik\",\n//     },\n//     {\n//         img: \"https://images.unsplash.com/photo-1444418776041-9c7e33cc5a9c\",\n//         title: \"Coffee\",\n//         author: \"@nolanissac\",\n//     },\n//     {\n//         img: \"https://images.unsplash.com/photo-1533827432537-70133748f5c8\",\n//         title: \"Hats\",\n//         author: \"@hjrc33\",\n//     },\n//     {\n//         img: \"https://images.unsplash.com/photo-1558642452-9d2a7deb7f62\",\n//         title: \"Honey\",\n//         author: \"@arwinneil\",\n//     },\n//     {\n//         img: \"https://images.unsplash.com/photo-1516802273409-68526ee1bdd6\",\n//         title: \"Basketball\",\n//         author: \"@tjdragotta\",\n//     },\n//     {\n//         img: \"https://images.unsplash.com/photo-1518756131217-31eb79b20e8f\",\n//         title: \"Fern\",\n//         author: \"@katie_wasserman\",\n//     },\n//     {\n//         img: \"https://images.unsplash.com/photo-1597645587822-e99fa5d45d25\",\n//         title: \"Mushrooms\",\n//         author: \"@silverdalex\",\n//     },\n//     {\n//         img: \"https://images.unsplash.com/photo-1567306301408-9b74779a11af\",\n//         title: \"Tomato basil\",\n//         author: \"@shelleypauls\",\n//     },\n//     {\n//         img: \"https://images.unsplash.com/photo-1471357674240-e1a485acb3e1\",\n//         title: \"Sea star\",\n//         author: \"@peterlaster\",\n//     },\n//     {\n//         img: \"https://images.unsplash.com/photo-1589118949245-7d38baf380d6\",\n//         title: \"Bike\",\n//         author: \"@southside_customs\",\n//     },\n// ];\nconst primary = indigo[500];\nconst primaryLight = indigo[200];\nconst primaryDark = indigo[900];\nconst secondary = teal[500];\nconst secondaryLight = teal[200];\n\n//This needs handlers for fetch calls to delete buttons need to be pathed to page to update page\n\nconst Profile = () => {\n  const { username } = useParams();\n\n  const { loading, data } = useQuery(username ? QUERY_USER : QUERY_ME, {\n    variables: { username: username },\n  });\n\n  const user = data?.me || data?.user || {};\n\n  if (Auth.loggedIn() && Auth.getProfile().data._id === username) {\n    return <Redirect to=\"/profile\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.username) {\n    return (\n      <h4>\n        You need to be logged in to see your profile page. Use the navigation\n        links above to sign up or log in!\n      </h4>\n    );\n  }\n  // console.log(itemData)\n\n  return (\n    <main>\n      <Container\n        maxWidth=\"xxl\"\n        sx={{\n          bgcolor: secondaryLight,\n        }}\n      >\n        <Box>\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"text.primary\"\n            gutterBottom\n            paddingTop=\"20px\"\n            sx={{\n              color: primaryDark,\n            }}\n          >\n            {user.companyName}\n            {/* Simply Class Photography */}\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"text.secondary\"\n            paragraph\n            sx={{\n              color: primaryDark,\n            }}\n          >\n            {\" \"}\n            {user.bio}\n            &nbsp;\n            <Typography variant=\"h5\" color=\"inherit\" noWrap>\n              Reservation Fee : {user.reservationCost}\n            </Typography>\n          </Typography>\n          <Stack\n            sx={{ pt: 4 }}\n            direction=\"row\"\n            spacing={2}\n            justifyContent=\"center\"\n          >\n            {/* <Button sx={{\n                            bgcolor: primaryLight,\n                            color: primaryDark,\n                            border: primaryDark,\n                            borderStyle: \"solid\",\n                            borderWidth: \"1px\",\n                        }} href=\"/update\"\n                            variant=\"outlined\">Edit the post</Button> */}\n            <Button\n              sx={{\n                bgcolor: primaryDark,\n              }}\n              href={user.link}\n              variant=\"contained\"\n            >\n              More of my work\n            </Button>\n            <Button\n              sx={{\n                bgcolor: primaryLight,\n                color: primaryDark,\n                border: primaryDark,\n                borderStyle: \"solid\",\n                borderWidth: \"1px\",\n              }}\n              variant=\"outlined\"\n            >\n              Connect with me\n              {/* <Mailto email={user.email}>\n                                Connect with me </Mailto> */}\n            </Button>\n            <Button\n              sx={{\n                bgcolor: primaryDark,\n              }}\n              variant=\"contained\"\n            >\n              Make appointment with me\n            </Button>\n          </Stack>\n        </Box>\n\n        <Box\n          maxWidth=\"lg\"\n          sx={{\n            paddingLeft: 90,\n            m: 5,\n          }}\n        >\n          <img src={user.image}></img>\n        </Box>\n      </Container>\n    </main>\n  );\n};\n\nexport default Profile;\n","import Commerce from \"@chec/commerce.js\";\n// require(\"dotenv\").config();\n\nexport const commerce = new Commerce(process.env.REACT_APP_COMMERCE_PUBLIC_KEY);\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(() => ({\n  root: {\n    maxWidth: \"100%\",\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardActions: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  cardContent: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  CardActions,\n  Typography,\n  IconButton,\n  Button,\n} from \"@material-ui/core\";\nimport AddShoppingCartIcon from \"@mui/icons-material/AddShoppingCart\";\nimport useStyles from \"./styles\";\nimport { PopupButton } from \"react-calendly\";\nimport { Link } from \"react-router-dom\";\n\nconst Product = ({ photo, onAddToCart, categoryName }) => {\n  const classes = useStyles();\n  const str = photo.name.split(\" \").join(\"\").toLowerCase();\n  // str.split(\" \").join(\"\").toLowerCase();\n  const url = `https://calendly.com/${str}`;\n  console.log(url);\n  return (\n    <Card className={classes.root}>\n      <CardMedia\n        className={classes.media}\n        image={photo.image.url}\n        title={photo.name}\n      />\n      <CardContent>\n        <div className={classes.cardContent}>\n          <Typography variant=\"h6\" gutterBottom>\n            {photo.name}\n          </Typography>\n          <Typography variant=\"body2\" gutterBottom>\n            {photo.price.formatted_with_symbol}\n          </Typography>\n        </div>\n        {/* <Typography variant=\"body2\" gutterBottom>\n          {photo.categories}\n        </Typography> */}\n        {/* <Typography\n          dangerouslySetInnerHTML={{ __html: photo.categories[0].name }}\n          variant=\"body1\"\n        /> */}\n        <Typography\n          dangerouslySetInnerHTML={{ __html: photo.description }}\n          variant=\"body2\"\n        />\n        <PopupButton\n          url={`https://calendly.com/${str}`}\n          text=\"Select appointment day\"\n        />\n      </CardContent>\n      <CardActions disableSpacing className={classes.cardActions}>\n        <Button\n          variant=\"outlined\"\n          component={Link}\n          to={`/product-view/${photo.id}`}\n        >\n          {\" \"}\n          View{\" \"}\n        </Button>\n        <IconButton\n          aria-label=\"Add to Card\"\n          onClick={() => onAddToCart(photo.id, 1)}\n        >\n          <AddShoppingCartIcon />\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n};\nexport default Product;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n  root: {\n    flexGrow: 1,\n  },\n}));\n","import { FormControl, Select, MenuItem } from \"@material-ui/core\";\n\nconst SelectCategories = ({ selectedCategory, categories, onChange }) => {\n  return (\n    <>\n      <FormControl className=\"formControl\">\n        <Select value={selectedCategory.id} onChange={onChange}>\n          {categories.map((category) => (\n            <MenuItem key={category.id} value={category.id}>\n              {category.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n};\nexport default SelectCategories;\n","import React, { useState } from \"react\";\nimport {\n  Container,\n  InputBase,\n  IconButton,\n  Grid,\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n// import React, { useState } from \"react\";\nimport SearchByCategories from \"./searchbycategories/searchByCate\";\nimport \"./style.css\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport AddShoppingCartIcon from \"@mui/icons-material/AddShoppingCart\";\nimport { commerce } from \"../../lib/commerce\";\n// import Products from \"../Products/Products\";\nimport { Box } from \"@mui/system\";\n\nconst FilterPhotographer = ({\n  categories,\n  searchResult,\n  setSearchResult,\n  onAddToCart,\n}) => {\n  const defaultCategory = { id: 0, name: \"All\" };\n  const [selectedCategory, setSelectedCategory] = useState(defaultCategory);\n  const [keyword, setKeyword] = useState(\"\");\n  const [resultMess, setResultMess] = useState(\"\");\n  // const [searchResult, setSearchResult] = useState([]);\n  const handleSelectChange = (event) => {\n    const { value } = event.target;\n    const category = categories.find((cat) => cat.id === value);\n    if (value === 0) {\n      setSelectedCategory(defaultCategory);\n    } else {\n      setSelectedCategory(category);\n    }\n  };\n  const handleInputChange = (event) => {\n    if (!keyword || !event.target.value) {\n      setResultMess(\"\");\n      setSearchResult([]);\n      setSelectedCategory(defaultCategory);\n    }\n    setKeyword(event.target.value);\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (keyword) {\n      try {\n        const categoryId = selectedCategory.id\n          ? { category_id: selectedCategory.id }\n          : {};\n        const { data } = await commerce.products.list({\n          query: keyword,\n          ...categoryId,\n        });\n        console.log({ data });\n        console.log({ keyword });\n        console.log({ selectedCategory });\n        if (!data) {\n          setResultMess(\n            \"Sorry! We have no matching photographer for your request\"\n          );\n          setSearchResult([]);\n          return;\n        }\n        setResultMess(\"\");\n        setSearchResult(data);\n      } catch (error) {\n        setSearchResult([]);\n        console.log(error);\n      }\n    } else {\n      setResultMess(\"You have to put on Location\");\n    }\n  };\n  // console.log(selectedCategory);\n  console.log(searchResult);\n  return (\n    <>\n      <div className=\"filter-bar\">\n        <Container>\n          <Box\n            component=\"form\"\n            className=\"root\"\n            sx={{\n              backgroundColor: \"primary.dark\",\n              \"&:hover\": {\n                backgroundColor: \"primary.main\",\n                opacity: [0.9, 0.8, 0.7],\n              },\n            }}\n            onSubmit={onSubmit}\n          >\n            <SearchByCategories\n              categories={[defaultCategory, ...categories]}\n              selectedCategory={selectedCategory}\n              onChange={handleSelectChange}\n            />\n            <InputBase\n              className=\"input\"\n              onChange={handleInputChange}\n              placeholder=\"Search for a photographer\"\n              inputProps={{ \"aria-label\": \"Search for a photographer\" }}\n            />\n            <IconButton type=\"submit\" aria-label=\"search\">\n              <SearchIcon />\n            </IconButton>\n          </Box>\n          <p className=\"result-message\"> {resultMess} </p>\n        </Container>\n\n        <div>\n          <Grid container spacing={4}>\n            {searchResult.map((photo) => (\n              <Grid key={photo.id} item xs={12} sm={6} md={4}>\n                <Card>\n                  <CardMedia image={photo.image.url} title={photo.name} />\n                  <CardContent>\n                    <div>\n                      <Typography variant=\"h6\" gutterBottom>\n                        {photo.name}\n                      </Typography>\n                      <Typography variant=\"body2\" gutterBottom>\n                        {photo.price.formatted_with_symbol}\n                      </Typography>\n                    </div>\n                    <Typography\n                      dangerouslySetInnerHTML={{ __html: photo.description }}\n                      variant=\"body2\"\n                    />\n                  </CardContent>\n                  <CardActions disableSpacing>\n                    <Button\n                      variant=\"outlined\"\n                      component={Link}\n                      to={`/product-view/${photo.id}`}\n                    >\n                      {\" \"}\n                      View{\" \"}\n                    </Button>\n                    <IconButton\n                      aria-label=\"Add to Card\"\n                      onClick={() => onAddToCart(photo.id, 1)}\n                    >\n                      <AddShoppingCartIcon />\n                    </IconButton>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default FilterPhotographer;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Grid, Typography } from \"@material-ui/core\";\nimport Product from \"./Product/Product.js\";\nimport useStyles from \"./style\";\nimport SearchProduct from \"../Search\";\n// import { teal, indigo } from \"@mui/material/colors\";\n//paddingBottom:'20px', paddingTop: \"20px\"\nconst Products = ({ onAddToCart, categories }) => {\n  const box = useStyles();\n  const [searchResult, setSearchResult] = useState([]);\n  // const primary = indigo[500];\n  // const primaryLight = indigo[200];\n  // const primaryDark = indigo[900];\n  // const secondary = teal[500];\n  // const secondaryLight = teal[200];\n  return (\n    <>\n      <SearchProduct\n        categories={categories}\n        searchResult={searchResult}\n        setSearchResult={setSearchResult}\n        onAddToCart={onAddToCart}\n      />\n      {!searchResult.length && (\n        <Container\n        // maxWidth=\"xxl\"\n        // sx={{\n        //   bgcolor: secondaryLight,\n        // }}\n        >\n          <div\n            styles={{\n              paddingBottom: \"20px\",\n            }}\n          >\n            {categories\n              .slice(0)\n              .reverse()\n              .map((category, index) => {\n                return category.productsData.length ? (\n                  <div\n                    styles={{\n                      backgroundImage:\n                        index % 2 !== 0\n                          ? \"linear-gradient(to bottom right, #3d4a5d, #3d4a5d, #bb86fc\"\n                          : \"\",\n                    }}\n                  >\n                    <div className={box.content}>\n                      <div className={box.toolbar}>\n                        <Typography\n                          variant=\"h4\"\n                          styles={{\n                            paddingBottom: \"20px\",\n                            paddingTop: \"20px\",\n                          }}\n                        >\n                          {category.name}\n                        </Typography>\n                        <Grid container justifyContent=\"center\" spacing={4}>\n                          {category.productsData.map((photo) => (\n                            <Grid\n                              item\n                              key={photo.id}\n                              xs={12}\n                              sm={6}\n                              md={4}\n                              lg={3}\n                            >\n                              <Product\n                                photo={photo}\n                                onAddToCart={onAddToCart}\n                                categoryName={category.name}\n                              />\n                            </Grid>\n                          ))}\n                        </Grid>\n                      </div>\n                    </div>\n                  </div>\n                ) : null;\n              })}\n          </div>\n        </Container>\n      )}\n    </>\n  );\n};\nexport default Products;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar,\n  title: {\n    marginTop: \"5%\",\n  },\n  emptyButton: {\n    minWidth: \"150px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginBottom: \"5px\",\n    },\n    [theme.breakpoints.up(\"xs\")]: {\n      marginRight: \"20px\",\n    },\n  },\n  checkoutButton: {\n    minWidth: \"150px\",\n  },\n  link: {\n    textDecoration: \"none\",\n  },\n  cardDetails: {\n    display: \"flex\",\n    marginTop: \"10%\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n  },\n}));\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(() => ({\n  media: {\n    height: 260,\n  },\n  cardContent: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  cartActions: {\n    justifyContent: \"space-between\",\n  },\n  buttons: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n","import React from \"react\";\nimport {\n  Typography,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n} from \"@material-ui/core\";\n\nimport useStyles from \"./style\";\n//i.image.url\nconst CartItem = ({ i, onUpdateCartQty, onRemoveFromCart }) => {\n  const classes = useStyles();\n  return (\n    <Card>\n      <CardMedia image={i.image.url} alt={i.name} className={classes.media} />\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h6\">{i.name}</Typography>\n        <Typography variant=\"h6\">\n          {i.line_total.formatted_with_symbol}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.cardActions}>\n        <div className={classes.buttons}>\n          <Button\n            type=\"button\"\n            size=\"small\"\n            onClick={() => onUpdateCartQty(i.id, i.quantity - 1)}\n          >\n            -\n          </Button>\n          <Typography>{i.quantity}</Typography>\n          <Button\n            type=\"button\"\n            size=\"small\"\n            onClick={() => onUpdateCartQty(i.id, i.quantity + 1)}\n          >\n            +\n          </Button>\n        </div>\n        <Button\n          variant=\"contained\"\n          type=\"button\"\n          color=\"secondary\"\n          onClick={() => onRemoveFromCart(i.id)}\n        >\n          Remove\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default CartItem;\n","import React from \"react\";\nimport { Container, Typography, Button, Grid } from \"@material-ui/core\";\n// import { commerce } from \"../../../lib/commerce\";\nimport useStyles from \"./style\";\nimport CartItem from \"./CartItem/CartItem\";\nimport { Link } from \"react-router-dom\";\n\nconst Cart = ({ cart, onUpdateCartQty, onRemoveFromCart, onEmptyCart }) => {\n  const classes = useStyles();\n\n  const EmptyCard = () => {\n    return (\n      <Typography variant=\"subtitle1\">\n        Opps! You haven't choose any photographer yet!{\" \"}\n        <Link to=\"/products\" className={classes.link}>\n          Start select your photographer\n        </Link>\n      </Typography>\n    );\n  };\n  const FilledCart = () => {\n    return (\n      <>\n        <Grid container spacing={3}>\n          {cart.line_items.map((item) => (\n            <Grid item xs={12} sm={4} key={item.id}>\n              <CartItem\n                i={item}\n                onUpdateCartQty={onUpdateCartQty}\n                onRemoveFromCart={onRemoveFromCart}\n              />\n            </Grid>\n          ))}\n        </Grid>\n        <div className={classes.cardDetails}>\n          <Typography variant=\"h4\">\n            Subtotal: {cart.subtotal.formatted_with_symbol}\n          </Typography>\n          <div>\n            <Button\n              className={classes.emptyButton}\n              size=\"large\"\n              type=\"button\"\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={onEmptyCart}\n            >\n              Empty Cart\n            </Button>\n            <Button\n              component={Link}\n              to={{ pathname: cart.hosted_checkout_url }}\n              target=\"_blank\"\n              className={classes.checkoutButton}\n              size=\"large\"\n              type=\"button\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Checkout\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  };\n  return (\n    <>\n      <Container>\n        <div className={classes.toolbar}>\n          <Typography className={classes.title} variant=\"h4\" gutterBottom>\n            Your Choice of Photographer\n          </Typography>\n          {cart.total_items > 0 ? <FilledCart /> : <EmptyCard />}\n        </div>\n        &nbsp;\n      </Container>\n      &nbsp;\n    </>\n  );\n};\nexport default Cart;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/home\";\nimport Login from \"./components/Login\";\nimport Footer from \"./components/Footer\";\n// import SearchResults from \"./components/SearchResults\";\nimport Signup from \"./components/Signup\";\nimport Profile from \"./components/Profile\";\n//commerceJS\nimport { commerce } from \"./lib/commerce\";\nimport Products from \"./components/Products/Products\";\nimport Cart from \"./components/Cart/Cart\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const [cart, setCart] = useState({});\n  const [categories, setCategories] = useState([]);\n\n  const fetchCategories = async () => {\n    const { data: products } = await commerce.products.list();\n    const { data: categoriesData } = await commerce.categories.list();\n    const productsPerCat = categoriesData.reduce((acc, category) => {\n      return [\n        ...acc,\n        {\n          ...category,\n          productsData: products.filter((product) =>\n            product.categories.find((cat) => cat.id === category.id)\n          ),\n        },\n      ];\n    }, []);\n    setCategories(productsPerCat);\n    console.log(productsPerCat);\n  };\n\n  const fetchCart = async () => {\n    const data = await commerce.cart.retrieve();\n    setCart(data);\n    console.log(data);\n  };\n\n  const handleAddToCart = async (product_id, quantity) => {\n    console.log(product_id);\n    const item = await commerce.cart.add(product_id, quantity);\n    setCart(item.cart);\n  };\n  const handleUpdateCartQty = async (productId, quantity) => {\n    const data = await commerce.cart.update(productId, { quantity });\n    setCart(data.cart);\n  };\n  const handleRemoveFromCart = async (productId) => {\n    const data = await commerce.cart.remove(productId);\n    setCart(data.cart);\n  };\n  const handleEmptyCart = async () => {\n    const data = await commerce.cart.empty();\n    setCart(data.cart);\n  };\n  useEffect(() => {\n    fetchCart();\n    fetchCategories();\n  }, []);\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Navbar totalItems={cart.total_items} />\n          <div className=\"container\">\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/profiles/:username\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/products\">\n              <Products categories={categories} onAddToCart={handleAddToCart} />\n            </Route>\n            <Route exact path=\"/cart\">\n              <Cart\n                cart={cart}\n                onUpdateCartQty={handleUpdateCartQty}\n                onRemoveFromCart={handleRemoveFromCart}\n                onEmptyCart={handleEmptyCart}\n              />\n            </Route>\n            {/* <Route exact path=\"/profiles/:state\">\n              <SearchResults />\n            </Route> */}\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}